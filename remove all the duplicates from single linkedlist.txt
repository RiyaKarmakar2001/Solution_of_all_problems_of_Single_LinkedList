class Linkedlist{
    public Node head;
     class Node{
         int data;
         Node next;
           Node(int data){
               this.data=data;
               this.next=null;
           }
     }
    public void addNode(int data){
        Node newNode =new Node(data);
        if(head==null){
            head=newNode;
        }
        else{
            newNode.next=head;
            head=newNode;
        }
    }
    public Node removeDuplicates(){
        Node dummy =new Node(Integer.MIN_VALUE);
        Node prev=dummy;
        dummy.next=head;
        Node curr=head;
        while(curr!=null){
            if(curr.next!=null && curr.data==curr.next.data){
                while(curr.next!=null && curr.data==curr.next.data){
                    curr=curr.next;
                }
                prev.next=curr.next;
            }
            else{
                prev=prev.next;
            }
            curr=curr.next;
        }
        return dummy.next;
    }
    public Node removeAllDuplicate(){
        Node curr=head;
        while(curr!=null){
            Node temp=curr;
            while(temp!=null && temp.data==curr.data){
                temp=temp.next;
            }
            curr.next=temp;
            curr=curr.next;
        }
        return head;
    }
    public void printList(){
        Node temp=head;
        while(temp!=null){
            System.out.print(temp.data +"-->");
            temp=temp.next;
        }
        System.out.println("NULL");
    }
}
public class Main
{
	public static void main(String[] args) {
	Linkedlist list=new Linkedlist();
	list.addNode(5);
	list.addNode(4);
	list.addNode(3);
	list.addNode(3);
	list.addNode(3);
	list.addNode(2);
	list.addNode(1);
	list.addNode(6);
	list.addNode(6);
    list.addNode(6);
    list.addNode(7);
	//list.removeDuplicates();
	//list.printList();
	list.removeAllDuplicate();
	list.printList();
	
	}
}