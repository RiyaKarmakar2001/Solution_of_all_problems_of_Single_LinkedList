public class Main {
static Node head1,head2;
static class Node{
int data;
Node next;
Node(int data){
this.data=data;
this.next=null;
}
}

public  static int getIntersectionNode(Node head1,Node head2) {
int length1=getSize1(head1);
int length2=getSize2(head2);
Node h1=head1;
Node h2=head2;
while(length1>length2) {
length1--;
h1=h1.next;
}

while(length2>length1) {
length2--;
h2=h2.next;
}

if(true) {
h1=h1==null?head2:h1.next;
h2=h2==null?head1:h2.next;
}
return h1.next.data;
}
public static int getSize1(Node head1) {
Node temp=head1;
int count1=0;
while(temp!=null) {
temp=temp.next;
count1++;
}
return count1;
}

public static int getSize2(Node head2) {
Node temp=head2;
int count2=0;
while(temp!=null) {
temp=temp.next;
count2++;
}
return count2;
}

public static void main(String[] args) {
Main list=new Main();

   list.head1= new Node(3);
   list.head1.next= new Node(4);
   list.head1.next.next=new Node(5);
   list.head1.next.next.next=new Node(6);
   list.head1.next.next.next.next=new Node(7);
   
   list.head2=new Node(4);
   list.head2.next=new Node(7);
   list.head2.next.next=new Node(8);
 
  System.out.println(list.getIntersectionNode(head1,head2));
}

}